name: Release

on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      TAG_NAME:
        description: "Tag name"
        required: true

env:
  REGISTRY: ghcr.io
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TAG_NAME: ${{ github.event.inputs.TAG_NAME || github.event.release.tag_name }}

jobs:
  retag-docker-image:
    runs-on: ubuntu-latest
    name: Push updated Docker image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo VERSION=${TAG_NAME#v} >> $GITHUB_ENV
          echo IMAGE_NAME=$REGISTRY/$(echo ${GITHUB_REPOSITORY,,}) >> $GITHUB_ENV
          echo COMMITED_AT=$(git show -s --format=%cI `git rev-parse HEAD`) >> $GITHUB_ENV
          echo REVISION=$(git rev-parse --short HEAD) >> $GITHUB_ENV

      - name: Collect Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.created=${{ env.COMMITED_AT }}
            org.opencontainers.image.version=v${{ env.VERSION }}
            org.opencontainers.image.maintainer=GeoWerkstatt GmbH <support@geowerkstatt.ch>
          tags: |
            type=semver,pattern=v{{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=semver,pattern=v{{version}}

      - name: Log in to the GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner  }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            VERSION=${{ env.VERSION }}
            REVISION=${{ env.REVISION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:edge
          cache-to: type=inline

  patch-changelog:
    runs-on: ubuntu-latest
    name: Patch CHANGELOG.md

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo GIT_BRANCH_NAME=mark-version-${TAG_NAME#v}-as-released >> $GITHUB_ENV
          echo GIT_COMMIT_MESSAGE=Mark version ${TAG_NAME#v} as released >> $GITHUB_ENV
      - name: Checkout new branch and patch changelog
        run: |
          git checkout -b $GIT_BRANCH_NAME
          sed -i "/^\#\# \[Unreleased\]$/a \\\n\#\# $TAG_NAME - $(date '+%Y-%m-%d')" CHANGELOG.md
      - name: Commit, push and create pull request
        run: |
          git config --global user.email "office@geowerkstatt.ch"
          git config --global user.name "GeoWerkstatt-Build"
          git commit -am "$GIT_COMMIT_MESSAGE"
          git push --set-upstream origin $GIT_BRANCH_NAME
          gh pr create --title "$GIT_COMMIT_MESSAGE" --body ""
